{
  
    
        "post0": {
            "title": "6502 Optimization",
            "content": "6502 Assembly Optimization . Recently, I finished part 4 of the 6502 computer vlog by Ben Eater. In part 5, Ben wants to optimize the assembly code to write Hello World by adding an SKRAM because it takes up too much space. Although I have no doubts that the SKRAM is the most efficient way to optimize the a.out file, I wanted to try to make changes directly to the assembly file. . Lets look at the original code for the “hello_world.s” assembly file: . PORTB = $6000 PORTA = $6001 DDRB = $6002 DDRA = $6003 E = %10000000 RW = %01000000 RS = %00100000 .org $8000 reset: lda #%11111111 ; Set all pins on port B to output sta DDRB lda #%11100000 ; Set top 3 pins on port A to output sta DDRA lda #%00111000 ; Set 8-bit mode; 2-line display; 5x8 font sta PORTB lda #0 ; Clear RS/RW/E bits sta PORTA lda #E ; Set E bit to send instruction sta PORTA lda #0 ; Clear RS/RW/E bits sta PORTA lda #%00001110 ; Display on; cursor on; blink off sta PORTB lda #0 ; Clear RS/RW/E bits sta PORTA lda #E ; Set E bit to send instruction sta PORTA lda #0 ; Clear RS/RW/E bits sta PORTA lda #%00000110 ; Increment and shift cursor; don&#39;t shift display sta PORTB lda #0 ; Clear RS/RW/E bits sta PORTA lda #E ; Set E bit to send instruction sta PORTA lda #0 ; Clear RS/RW/E bits sta PORTA lda #&quot;H&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot;e&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot;l&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot;l&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot;o&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot;,&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot; &quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot;w&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot;o&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot;r&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot;l&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot;d&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA lda #&quot;!&quot; sta PORTB lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA loop: jmp loop .org $fffc .word reset .word $0000 . Looking closely at the code we can see a pattern. After every function set call to the display, we have to reenable the RS, RW, and E pins. This is in accordance to the LCD controller datasheet. We load the RS Bit, and store it to the Port A output which the display can read. . We have about two different patterns that repeat. One for the initial display parameters, and the other for the display writing. I’ll call the parameter repetition “enable”, and the display write repetition “displaywrite”. We can rewrite the code above to leverage methods with the .word function enabled on the compiler. Let’s look at the new code: . PORTB = $6000 PORTA = $6001 DDRB = $6002 DDRA = $6003 E = %10000000 RW = %01000000 RS = %00100000 .org $8000 enable: lda #0 ; Clear RS/RW/E bits sta PORTA lda #E ; Set E bit to send instruction sta PORTA lda #0 ; Clear RS/RW/E bits sta PORTA datawrite: lda #RS ; Set RS; Clear RW/E bits sta PORTA lda #(RS | E) ; Set E bit to send instruction sta PORTA lda #RS ; Clear E bits sta PORTA reset: lda #%11111111 ; Set all pins on port B to output sta DDRB lda #%11100000 ; Set top 3 pins on port A to output sta DDRA lda #%00111000 ; Set 8-bit mode; 2-line display; 5x8 font sta PORTB .word enable lda #%00001110 ; Display on; cursor on; blink off sta PORTB .word enable lda #%00000110 ; Increment and shift cursor; don&#39;t shift display sta PORTB .word enable lda #&quot;H&quot; sta PORTB .word datawrite lda #&quot;e&quot; sta PORTB .word datawrite lda #&quot;l&quot; sta PORTB .word datawrite lda #&quot;l&quot; sta PORTB .word datawrite lda #&quot;o&quot; sta PORTB .word datawrite lda #&quot;,&quot; sta PORTB .word datawrite lda #&quot; &quot; sta PORTB .word datawrite lda #&quot;w&quot; sta PORTB .word datawrite lda #&quot;o&quot; sta PORTB .word datawrite lda #&quot;r&quot; sta PORTB .word datawrite lda #&quot;l&quot; sta PORTB .word datawrite lda #&quot;d&quot; sta PORTB .word datawrite lda #&quot;!&quot; sta PORTB .word datawrite loop: jmp loop .org $fffc .word reset .word $0000 . As you can see, the overall function of the code did not change at all. All we did was reference a method. Referencing a method saves more space then rewriting the code. This is evident in the EEPROM. The original code size was almost 355 Bytes. Our new code size is around 155 bytes, giving us almsot 200 bytes more of EEPROM space. . We can visualize our space savings by calling: . hexdump -C a.out . This will let us visualize the storage in the EEPROM. The original file looks like this: . 00000000 a9 00 8d 01 60 a9 80 8d 01 60 a9 00 8d 01 60 a9 |....`....`....`.| 00000010 ff 8d 02 60 a9 e0 8d 03 60 a9 38 8d 00 60 00 80 |...`....`.8..`..| 00000020 a9 0e 8d 00 60 a9 00 8d 01 60 a9 80 8d 01 60 a9 |....`....`....`.| 00000030 00 8d 01 60 a9 06 8d 00 60 a9 00 8d 01 60 a9 80 |...`....`....`..| 00000040 8d 01 60 a9 00 8d 01 60 a9 48 8d 00 60 a9 20 8d |..`....`.H..`. .| 00000050 01 60 a9 a0 8d 01 60 a9 20 8d 01 60 a9 65 8d 00 |.`....`. ..`.e..| 00000060 60 a9 20 8d 01 60 a9 a0 8d 01 60 a9 20 8d 01 60 |`. ..`....`. ..`| 00000070 a9 6c 8d 00 60 a9 20 8d 01 60 a9 a0 8d 01 60 a9 |.l..`. ..`....`.| 00000080 20 8d 01 60 a9 6c 8d 00 60 a9 20 8d 01 60 a9 a0 | ..`.l..`. ..`..| 00000090 8d 01 60 a9 20 8d 01 60 a9 6f 8d 00 60 a9 20 8d |..`. ..`.o..`. .| 000000a0 01 60 a9 a0 8d 01 60 a9 20 8d 01 60 a9 2c 8d 00 |.`....`. ..`.,..| 000000b0 60 a9 20 8d 01 60 a9 a0 8d 01 60 a9 20 8d 01 60 |`. ..`....`. ..`| 000000c0 a9 20 8d 00 60 a9 20 8d 01 60 a9 a0 8d 01 60 a9 |. ..`. ..`....`.| 000000d0 20 8d 01 60 a9 77 8d 00 60 a9 20 8d 01 60 a9 a0 | ..`.w..`. ..`..| 000000e0 8d 01 60 a9 20 8d 01 60 a9 6f 8d 00 60 a9 20 8d |..`. ..`.o..`. .| 000000f0 01 60 a9 a0 8d 01 60 a9 20 8d 01 60 a9 72 8d 00 |.`....`. ..`.r..| 00000100 60 a9 20 8d 01 60 a9 a0 8d 01 60 a9 20 8d 01 60 |`. ..`....`. ..`| 00000110 a9 6c 8d 00 60 a9 20 8d 01 60 a9 a0 8d 01 60 a9 |.l..`. ..`....`.| 00000120 20 8d 01 60 a9 64 8d 00 60 a9 20 8d 01 60 a9 a0 | ..`.d..`. ..`..| 00000130 8d 01 60 a9 20 8d 01 60 a9 21 8d 00 60 a9 20 8d |..`. ..`.!..`. .| 00000140 01 60 a9 a0 8d 01 60 a9 20 8d 01 60 4c 4c 81 00 |.`....`. ..`LL..| 00000150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................| * 00007ff0 00 00 00 00 00 00 00 00 00 00 00 00 0f 80 00 00 |................| 00008000 . Our optimized file looks like this: . 00000000 a9 00 8d 01 60 a9 80 8d 01 60 a9 00 8d 01 60 a9 |....`....`....`.| 00000010 20 8d 01 60 a9 a0 8d 01 60 a9 20 8d 01 60 a9 ff | ..`....`. ..`..| 00000020 8d 02 60 a9 e0 8d 03 60 a9 38 8d 00 60 00 80 a9 |..`....`.8..`...| 00000030 0e 8d 00 60 00 80 a9 06 8d 00 60 00 80 a9 48 8d |...`......`...H.| 00000040 00 60 0f 80 a9 65 8d 00 60 0f 80 a9 6c 8d 00 60 |.`...e..`...l..`| 00000050 0f 80 a9 6c 8d 00 60 0f 80 a9 6f 8d 00 60 0f 80 |...l..`...o..`..| 00000060 a9 2c 8d 00 60 0f 80 a9 20 8d 00 60 0f 80 a9 77 |.,..`... ..`...w| 00000070 8d 00 60 0f 80 a9 6f 8d 00 60 0f 80 a9 72 8d 00 |..`...o..`...r..| 00000080 60 0f 80 a9 6c 8d 00 60 0f 80 a9 64 8d 00 60 0f |`...l..`...d..`.| 00000090 80 a9 21 8d 00 60 0f 80 4c 98 80 00 00 00 00 00 |..!..`..L.......| 000000a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................| * 00007ff0 00 00 00 00 00 00 00 00 00 00 00 00 1e 80 00 00 |................| 00008000 . The SKRAM method is faster and more efficient, but this method saves space and requires no extra hardware. However, it would require some port address changing on the EEPROM, and a lot of troubleshooting, so I’ll save the implementation for later. . Thanks for reading! .",
            "url": "https://moonbeam87.github.io/fastpages/2021/01/05/6502-Optimization.html",
            "relUrl": "/2021/01/05/6502-Optimization.html",
            "date": " • Jan 5, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Vector Fields",
            "content": "Example Problem 1: . $ vec{F}(x,y) = -y* vec{i}+x* vec{j} $ . Graph the Vector Field . import numpy as np import matplotlib.pyplot as plt %matplotlib inline x,y = np.meshgrid(np.linspace(-5,5,10),np.linspace(-5,5,10)) u = -y v = x plt.quiver(x,y,u,v) plt.show() . As you can see, the function follows a circular path centered at the origin. The length of each arrow is dependent on the x and y value chosen. The further away the end of the arrow is from the origin, the larger the arrow will be. Each arrow is tangent to a circle centered at the origin. . To calculate the radius of the circle, we take the following steps: . $ r = sqrt{x^2+y^2} $ . Example Problem 2: . $ vec{f}(x,y) = x^2y vec{i}-y^3 vec{j} $ . Plot the gradient vector field and the contour map of the original function . Our first step is to calculate the gradient of $ vec{f} $. We do this by taking the derivative of the P and Q function in f: . $ P = df/dx $ . $ df/dx = 2xy $ . $ Q = df/dy $ . $ df/dy = x^2-3y^2 $ . So our final gradient of f is as follows: . $ nabla{ vec{f}} = 2xy vec{i}+(x^2-3y^2) vec{j} $ . Now we can graph the gradient and our contour map . x,y = np.meshgrid(np.linspace(-5,5,10),np.linspace(-5,5,10)) u = 2*x*y v = x**2-3*y**2 plt.quiver(x,y,u,v) xlist = np.linspace(-5.0, 5.0, 100) ylist = np.linspace(-5.0, 5.0, 100) X, Y = np.meshgrid(xlist, ylist) Z = Y*X**2 - Y**3 plt.contour(X,Y,Z) plt.show() . The Vector Field shown here are perpendicular to the contour map, which would make sense considering the vector field is of the gradient vector of f. . If $ vec{F} $ is conservative, then $ f $ exists such that $ vec{F} = nabla{f} $ .",
            "url": "https://moonbeam87.github.io/fastpages/2021/01/01/Vector-Fields.html",
            "relUrl": "/2021/01/01/Vector-Fields.html",
            "date": " • Jan 1, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Single Ring Cfd Formatted Report",
            "content": "A CFD Write Up by Dev Patel . Robot Uprising FTC 14607 | Alexandria, VA | robotuprising.org . | Fluid Flow Simulation Project Report | . Dev Patel ∙ | 2021dpatel@gmail.com | | . | | | | . SOLIDWORKS Flow Simulation . Project Report . January 1, 2021 . . | | | | . Learn more about SOLIDWORKS Flow Simulation | | | | . # Table of Contents . 1 General Information 1 . 1.1 Analysis Environment 1 . 1.2 Model Information 1 . 1.3 Project Comments: 1 . 1.4 Size of Computational Domain 1 . 1.5 Simulation Parameters 1 . 1.5.1 Mesh Settings 1 . 1.5.2 Material Settings 2 . 1.5.3 Initial Conditions 2 . 1.5.4 Boundary Conditions 2 . 1.5.5 Volumetric Heat Sources 2 . 1.5.6 Engineering Goals 2 . 1.6 Analysis Time 2 . 2 Results 2 . 2.1 Analysis Goals 2 . 2.2 Global Min-Max-Table 2 . 2.3 Results 2 . 3 Appendix 2 . 3.1 Material Data 2 . General Information . Objective of the simulation: The objective of this simulation was to determine the drag coefficient of the Ultimate Goal FTC Ring, and to visualize airflow of the ring at launch speed. . Analysis Environment . Software Product: Flow Simulation 2020 3.0. Build: 4921 . CPU Type: Intel(R) Xeon(R) CPU E5-1620 v3 @ 3.50GHz . CPU Speed: 3501 MHz . RAM: 32690 MB / 18463 MB . Operating System: Windows 10 (or higher) (Version 10.0.18362) . Model Information . Model Name: Drag-Ring.SLDPRT . Project Name: Project(1) . Project Comments: . Unit System: SI (m-kg-s) . Analysis Type: External (not exclude internal spaces) . Size of Computational Domain . Size . X min -0.121 m . X max | 0.159 m | . Y min | -0.067 m | . Y max | 0.067 m | . Z min | -0.121 m | . Z max | 0.121 m | . X size | 0.279 m | . Y size | 0.133 m | . Z size | 0.241 m | . Simulation Parameters . Mesh Settings . Basic Mesh . Basic Mesh Dimensions . Number of cells in X 68 . Number of cells in Y | 32 | . Number of cells in Z | 58 | . Analysis Mesh . Total Cell count: 124136 . Fluid Cells: 124136 . Solid Cells: 4836 . Partial Cells: 2764 . Trimmed Cells: 0 . Additional Physical Calculation Options . Heat Transfer Analysis: Heat conduction in solids: Off . Flow Type: Laminar and turbulent . Time-Dependent Analysis: Off . Gravity: Off . Radiation: . Humidity: Off . Default Wall Roughness: 0 micrometer . Material Settings . Material Settings . Fluids . Air . Initial Conditions . Ambient Conditions . Thermodynamic parameters Static Pressure: 101325.00 Pa . Temperature: 293.20 K . . Velocity parameters | Velocity vector . Velocity in X direction: 5.500 m/s . Velocity in Y direction: 0 m/s . Velocity in Z direction: 0 m/s . | . Turbulence parameters | Turbulence intensity and length . Intensity: 0.10 % . Length: 1.905e-04 m . | . Engineering Goals . Goals . Global Goals . GG Force (X) 1 . Type Global Goal . Goal type | Force (X) | . Coordinate system | Global coordinate system | . Use in convergence | On | . Equation Goals . Equation Goal 1 . Type Equation Goal . Formula | GG Force (X) 1*2/(0.0249*1.204*(5.5)^2) | . Dimensionality | Force | . Use in convergence | On | . Analysis Time . Calculation Time: 0 s . Number of Iterations: 182 . Warnings: . # . Results . Analysis Goals . Goals . Name Unit Value Progress Criteria Delta Use in convergence . GG Force (X) 1 | N | 0.025 | 100 | 0.000698638676 | 0.000630624299 | On | . Equation Goal 1 | N | 0.055 | 100 | 0.00154074727 | 0.00139075133 | On | . Global Min-Max-Table . Min/Max Table . Name Minimum Maximum . Density (Fluid) [kg/m^3] | 1.20 | 1.20 | . Pressure [Pa] | 101290.97 | 101345.85 | . Temperature [K] | 293.19 | 293.21 | . Temperature (Fluid) [K] | 293.19 | 293.21 | . Velocity [m/s] | 0 | 7.204 | . Velocity (X) [m/s] | -0.919 | 6.876 | . Velocity (Y) [m/s] | -4.386 | 4.578 | . Velocity (Z) [m/s] | -3.491 | 3.434 | . Mach Number [ ] | 0 | 0.02 | . Velocity RRF [m/s] | 0 | 7.204 | . Velocity RRF (X) [m/s] | -0.919 | 6.876 | . Velocity RRF (Y) [m/s] | -4.386 | 4.578 | . Velocity RRF (Z) [m/s] | -3.491 | 3.434 | . Vorticity [1/s] | 0.20 | 1843.14 | . Relative Pressure [Pa] | -34.03 | 20.85 | . Shear Stress [Pa] | 0 | 0.85 | . Bottleneck Number [ ] | 4.1642142e-13 | 1.0000000 | . Heat Transfer Coefficient [W/m^2/K] | 0 | 0 | . ShortCut Number [ ] | 9.7415646e-13 | 1.0000000 | . Surface Heat Flux [W/m^2] | 0 | 0 | . Surface Heat Flux (Convective) [W/m^2] | 0 | 0 | . Acoustic Power [W/m^3] | 0 | 3.066e-10 | . Acoustic Power Level [dB] | 0 | 24.87 | . Results . As shown in our analysis goals, we found that the overall Drag Coefficient at 5.5 m/s of the ring was about 0.055. We also found interesting results with the flow trajectory visualization. The air is at its fastest (6.2 m/s) as it scales the furthest edge of the cylinder. That high speed movement creates a wind vortex behind the cylinder. The spiraling of the airflow (dirty air) can create turbulence for an object behind it, especially if the object is travelling very close to it. In addition to the dirty air vortex, we also see a pool of slower air inside the cylinder cavity. This pool of air eventually leaks out from the top and bottom of the cylinder, speeding up and entering the vortex. This air pool may affect another cylinder or object travelling just above the cylinder. The air pool has a speed of almost .17 m/s, so it is much slower than the cylinder edge. . . # . Appendix . Material Data . Engineering Database . Gases . Air . Path: Gases Pre-Defined . Specific heat ratio (Cp/Cv): 1.399 . Molecular mass: 0.0290 kg/mol . Dynamic viscosity . . Specific heat (Cp) . . Thermal conductivity . .",
            "url": "https://moonbeam87.github.io/fastpages/2020/11/20/Single-Ring-CFD-Formatted-Report.html",
            "relUrl": "/2020/11/20/Single-Ring-CFD-Formatted-Report.html",
            "date": " • Nov 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://moonbeam87.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://moonbeam87.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . Hi there 👋 :shipit: . I’m a senior at TJHSST! I love robotics, python, linux, and aws! . https://sourcerer.io/moonbeam87 . . 📜 My Credentials Include … SAP-C01 | SAA-C02 | . | 📫 How to reach me: Email! | ⚡ Fun fact: … McLaren F1 is my favorite racing team, and Fernando Alonso is my favorite driver! | . | . . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://moonbeam87.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://moonbeam87.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}